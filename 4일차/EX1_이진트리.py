"""
    자료구조 : 데이터[DATA]를 효율적으로 저장하는 방법
        1. 선형 데이터 구조
            * 리스트[LIST] , 스택[STACK] , 큐[QUEUE]
            1. 순서 대로 저장
            2. 단일 레벨
            3. 구조가 단순함
                    선형리스트
                        [ D ][ D ] [ D ] [ D ]
                    연결리스트
                        [node] ---> [node] ---> [node]
                    스택
                        <<-----------------|
    push/pop             D     D     D     D   |
                        >>-----------------|
                    큐
      enqueue  ----->>>-------------
     rear                 D       D       D       D       front
                      -------------->>>---- dequeue

        2. 비선형 데이터 구조
            * 트리 , 그래프
            1. 요소[data] 사이에 관계 따라 저장
            2. 다단계 레벨
            3. 구조가 복잡함

        트리 : 비선형 데이터 구조
            1.  계층적 관계를 표현
                * 조직도 , 컴퓨터 폴더 계층 등등
        이진트리 :  나무를 거꾸로 뒤집어 놓은 형태 / ** 부모가 2개의 자식노드 갖짐
            1. 이진[2개뿌리]트리[나무]
            2. 뿌리[ root ] 는 한개만 존재
            3. 노드[ node ]
                1. 부모노드[ parent node ] : 부모노드 1개당 2개의 자식 노드[Left , Right] 2개 가질수 있다.
                2. 자식노드[ child node ] :
                    1. 왼쪽 노드    : 부모노드 보다 데이터 작으면 왼쪽노드
                    2. 오른쪽노드 : 부모노드 보다 데이터 크면 오른쪽노드
            4. 이진트리 [상태]종류
                    1. 포화[FULL] 이진트리 : 모든 노드가 존재한 상태
                    2. 완전[complete] 이진트리 : 일부 노드가 비어 있어도 되는 노드 [ 마지막 노드가 비어있는 상태 ]
                    3. 편향[skewef] 이진트리 : 왼쪽 혹은 오른쪽 만 노드가  존재 하는 상태
                    4. 일반 이진 트리 : 그외
            5. 많이 사용되는 경우
                1. 정렬[ 검색 속도 ]
            6. 이진트리 순회[출력] 종류
                     1. 중위 순회
                                P
                           L        R           -->  L -> P -> R
                    2 후위 순회
                                P
                            L       R           --> L -> R -> P
                    3. 전위 순회
                                P
                            L      R            --> P -> L -> R
             ------------------------
                        1
                2           3
            4     5     6     7
                    중위 순회  :
                    후위 순회 :
                    전위 순회 :


           7. Node 구현
                * 이진트리 Node 객체                                   vs              연결리스트 Node 객체
                        1. left 2.data 3. right                                               1. data 2. link
                ------------------
                    class TreeNode() :
                        def __init__(self) :
                            self.left = None            왼쪽 자식 노드 링크 [ 작은값 ]
                            self.data = None            데이터
                            self.right = None           오른쪽 자식 노드 링크[ 큰값 ]
             ------------------
                                ROOT                                    ---- Level 0
                PN                              PN                      ---- Level 1
        LCN         RCN             LCN     RCN               ---- Level 2



"""