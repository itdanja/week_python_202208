
# 1. 중복검색 2.검색도서의 포함된 단어를 도서검색
def bookSearch( 도서목록 , 검색도서 ) :         # 인수[매개변수] : 1.도서목록 2.검색도서
    poslist = [ ]                                               # 찾은 도서들을 저장하는 배열[리스트]
    size = len(도서목록)
    for i in range( size ) :
        # 1. 도서명에서 공백한 검색
        도서 = 도서목록[i][0]
        도서명 = 도서.replace(" " ,"")                       # 문자열.replace( old , new ) : 치환[교체]
        # 2. 검색도서에 일부가 포함된 도서명 찾기
        인덱스 = 도서명.find( 검색도서 )                     # 문자열.find( str ) : 문자 찾기 -> 인덱스 찾기 [ -1 : 못찾음 ]
        if 인덱스 != -1 :
        # 도서목록[i][0] : 도서명      도서목록[i][1] : 도서위치
            poslist.append( 도서목록[i] )       # 찾은 i번째 인덱스의 데이터를 poslist 저장
    return poslist                                  # poslist 반환

# 도서 = [ '책이름' , '책위치' ]
도서목록 = [  ['하얼빈' , 'A-10'] , [ '불편한 편의점 2' , 'B-20' ]
            ,  ['역행자' , 'C-20' ] ,  [ '파친코 1' ,  'A-20']
            ,  ['흔한남매 11' , 'B-10' ] , [ '불편한 편의점 1' , 'B-19' ]   ]

검색도서 = input(' 검색할 도서명 : ')     # 검색할 도서명 입력받기
pos = bookSearch( 도서목록 , 검색도서 ) # 도서검색 함수 실행 [ 반환 = 찾은 도서명 리스트 ]
if pos == [ ] :  #  만약에 반환값이 존재하지 않으면
    print( 검색도서 , ' 가 없습니다. ')
else:   # 찾았다.
    for i in range(len(pos) ) : # 찾은 poslist 반복문 이용한 출력
        print('검색된 도서 : ' , pos[i][0] , '     위치 : ' , pos[i][1] )
